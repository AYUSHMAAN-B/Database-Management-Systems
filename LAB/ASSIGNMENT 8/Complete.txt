CREATE AND LIST DATABASE

1. show dbs
2. use CompanyDB
3. No

INSERT

1. use CompanyDB
2. db.createCollection('customers')
   db.customers.insertOne({ name : 'Ayushmaan', age : 20 })
3. Yes
4. show collections
5. db.customers.insertMany([{ name : 'Bob' }, { name : 'Cheryala', age : 20, level : 999 }, { name : 'Admin', age : 999 }])

FIND

1. db.customers.find()
2. db.customers.find( { age : 27 } )
3. db.customers.find( { age : { $gt3 : 25 } } )
4. db.customers.find({ age: { $lt : 27 } })
5. db.customers.find({ age: { $lte : 27 } })
6. db.customers.find({ age: { $lte : 20 } }, {_id : 0, name : 1})
7. db.customers.find({ age: { $lte : 20 } }, {_id : 0, name : 1, age : 1})


NESTED DOCUMENTS

1. db.customers.insert( { name : 'Harry', age : 25, address : { street : "75, Bd. Saint Germain", city : 'Paris', country : 'France' } } )
2. db.customers.find({ 'address.city' :  'Paris' })

UPDATE

1. db.customers.update({name : 'Ayushmaan'}, {$set : {age : 21}})
2. MongoshInvalidInputError: [COMMON-10001] Missing required argument at position 1 (Collection.update)

DELETE

1. db.customers.deleteOne({name:'Bob'})
2. db.customers.find({}, {_id : 0})
3. db.customers.drop()
4. db.CompanyDb.drop()

SAMPLES

1. LOADED
2. EXPLORED

EXERCISES [ REDIS ]

1. SET course:1:title "Data Management"
   SET course:1:NoOfStudents 3
   SADD course:1:TB "Fundamentals of Database Systems" "NoSQL for Mere Mortals"
2. ZADD course:1:students 9.1 Ayushmaan 8.9 Manikanta 9.0 Sanchi
3. ZRANGE course:1:students 0 -1
4. SCARD course:1:TB
5. RENAME course:1:TB course:1:materials
6. SADD course:1:materials "Slides"
7. SET course:1:assignment4 "Redis and MondoDB"
8. EXPIRE course:1:handout10 100
9. KEYS *
10. DEL course:1:NoOfStudents

EXERCISES [ MONGODB ]

1. show dbs
2. show collections
3. db.listingsAndReviews.find( { 'address.country' : 'Australia' }, { _id : 1, name : 1 } )
4. db.listingsAndReviews.find( { bedrooms : { $gte : 2 } }, { _id : 1, name : 1 } )
5. db.listingsAndReviews.find( {'address.location.is_location_exact' : true}, { _id : 1, name : 1, address : 1 } )



